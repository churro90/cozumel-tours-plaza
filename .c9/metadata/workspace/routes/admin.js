{"changed":true,"filter":false,"title":"admin.js","tooltip":"/routes/admin.js","value":"var express      = require(\"express\"),\n    passport     = require(\"passport\"),\n  /*  middleware = require(\"./middleware\"),*/\n    moment       = require(\"moment\"),\n    Reservation  = require(\"../models/reservation\"),\n    User         = require(\"../models/user\"),\n    router       = express.Router();\n\nrouter.use(express.static(__dirname + \"/public\"));\n\n//=========ADMIN ROUTES==============\n\n\n/*router.get(\"/\", function(req, res){  // add in the get route middleware.isLoggedIn, just using it for production \n    \n    Reservation.find().sort({date: 1}).exec(function(err, allReservations){\n       if(err){\n           console.log(err);\n       } \n        else {\n            res.render(\"admin/tp-admin\", {reservations: allReservations, moment: moment});\n        }\n    });\n    \n});\n\nrouter.get(\"/choferes\", function(req, res){\n   res.render(\"admin/choferes\"); \n});\n\nrouter.get(\"/vehiculos\", function(req, res) {\n   res.render(\"admin/vehiculos\"); \n});\n\n\n//================RESERVATION DETAILS==============================\nrouter.get(\"/:id\", function(req, res) {\n   Reservation.findById(req.params.id).exec(function(err, foundReservation){\n       if(err) {\n           console.log(err);\n       } else {\n           res.render(\"admin/reservation-details\", {reservation: foundReservation, moment: moment});\n       }\n   }) ;\n});\n\n//==============EDIT RESERVATION ======================================\n\nrouter.get(\"/:id/edit\", function(req, res) {\n   Reservation.findById(req.params.id, function(err, foundReservation){\n     res.render(\"admin/edit\", {reservation: foundReservation, moment: moment});  \n   });\n});\n\nrouter.put(\"/:id\", function(req, res){\n    //find and update the correct campground\n    \n    Reservation.findByIdAndUpdate(req.params.id, req.body.reservation, function(err, updatedReservation){\n       if(err){\n           req.flash(\"error\", \"There was an error editing the reservation, please check the form and submit again\");\n           res.redirect(\"tp-admin/:id/edit\");\n       } else {\n           req.flash(\"success\", \"Reservation succesfully edited\");\n           res.redirect(\"/tp-admin/\" + req.params.id);\n       }\n    });\n    //redirect show page\n});\n*/\n\n\n/* ============SE USO PARA CREAR 2 USUARIOS Y LUEGO DESHABILITAR===========\n\nrouter.get(\"/register\", function(req, res) {\n   res.render(\"register\"); \n});\n\nrouter.post(\"/register\", function(req, res) {\n    var newUser = new User({username: req.body.username});\n   User.register(newUser , req.body.password, function(err, user){\n      if(err) {\n          req.flash(\"error\", err.message);\n          return res.redirect(\"/register\");\n          \n      } \n      passport.authenticate(\"local\")(req, res, function(){\n          req.flash(\"success\", \"Welcome to YelpCamp \" + user.username);\n         res.redirect(\"/campgrounds\"); \n      });\n   });\n});*/\n \n    \n    \nmodule.exports = router;","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":68,"column":0},"end":{"row":68,"column":2},"action":"insert","lines":["*/"],"id":2112},{"start":{"row":13,"column":0},"end":{"row":13,"column":2},"action":"insert","lines":["/*"]}]]},"ace":{"folds":[],"scrolltop":2,"scrollleft":0,"selection":{"start":{"row":13,"column":2},"end":{"row":68,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1516197263659}